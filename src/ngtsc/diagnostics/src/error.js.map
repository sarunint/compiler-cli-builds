{"version":3,"file":"error.js","sourceRoot":"","sources":["../../../../../../../packages/compiler-cli/src/ngtsc/diagnostics/src/error.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,iCAAiC;AAIjC,MAAa,oBAAoB;IAC/B,YAAqB,IAAe,EAAW,IAAa,EAAW,OAAe;QAAjE,SAAI,GAAJ,IAAI,CAAW;QAAW,SAAI,GAAJ,IAAI,CAAS;QAAW,YAAO,GAAP,OAAO,CAAQ;QAEtF;;WAEG;QACH,4BAAuB,GAAG,IAAI,CAAC;IAL0D,CAAC;IAO1F,YAAY;QACV,MAAM,IAAI,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO;YACL,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,KAAK;YACrC,IAAI,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACzC,IAAI,EAAE,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE;YACnD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;YACtC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE;YACvB,WAAW,EAAE,IAAI,CAAC,OAAO;SAC1B,CAAC;IACJ,CAAC;CACF;AAnBD,oDAmBC;AAED,SAAgB,sBAAsB,CAAC,GAAQ;IAC7C,OAAO,GAAG,CAAC,uBAAuB,KAAK,IAAI,CAAC;AAC9C,CAAC;AAFD,wDAEC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {ErrorCode} from './code';\n\nexport class FatalDiagnosticError {\n  constructor(readonly code: ErrorCode, readonly node: ts.Node, readonly message: string) {}\n\n  /**\n   * @internal\n   */\n  _isFatalDiagnosticError = true;\n\n  toDiagnostic(): ts.DiagnosticWithLocation {\n    const node = ts.getOriginalNode(this.node);\n    return {\n      category: ts.DiagnosticCategory.Error,\n      code: Number('-99' + this.code.valueOf()),\n      file: ts.getOriginalNode(this.node).getSourceFile(),\n      start: node.getStart(undefined, false),\n      length: node.getWidth(),\n      messageText: this.message,\n    };\n  }\n}\n\nexport function isFatalDiagnosticError(err: any): err is FatalDiagnosticError {\n  return err._isFatalDiagnosticError === true;\n}\n"]}